#!/bin/sh

# Slackware build script for kde-workspace

# Written by Niki Kovacs <info@microlinux.fr>
#
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=kde-workspace      
VERSION=${VERSION:-4.10.5}  
BUILD=${BUILD:-3}
TAG=${TAG:-_microlinux}   

NUMJOBS=${NUMJOBS:--j5}

# Automatically determine the architecture we're building on:
MARCH=$( uname -m )
if [ -z "$ARCH" ]; then
  case "$MARCH" in
    i?86)    export ARCH=i486 ;;
    armv7hl) export ARCH=$MARCH ;;
    arm*)    export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
    *)       export ARCH=$MARCH ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/microlinux} 
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}  

# Use this as CFLAGS and CXXFLAGS:
if [ -z "$SLKCFLAGS" ]; then
  if [ "$ARCH" = "i486" ]; then
    export SLKCFLAGS="-O2 -march=i486 -mtune=i686"
    export LIBDIRSUFFIX=""
  elif [ "$ARCH" = "s390" ]; then
    export SLKCFLAGS="-O2"
    export LIBDIRSUFFIX=""
  elif [ "$ARCH" = "x86_64" ]; then
    export SLKCFLAGS="-O2 -fPIC"
    export LIBDIRSUFFIX="64"
  elif [ "$ARCH" = "arm" ]; then
    export SLKCFLAGS="-O2 -march=armv4 -mtune=xscale"
    export LIBDIRSUFFIX=""
  elif [ "$ARCH" = "armel" ]; then
    export SLKCFLAGS="-O2 -march=armv4t"
    export LIBDIRSUFFIX=""
  elif [ "$ARCH" = "armv7hl" ]; then
    export SLKCFLAGS="-O2 -march=armv7-a -mfpu=vfpv3-d16"
    export LIBDIRSUFFIX=""
  else
    export SLKCFLAGS="-O2"
    export LIBDIRSUFFIX=""
  fi
fi

set -e 

if [ ! -r $PRGNAM-$VERSION.tar.xz ] ; then
   wget -c http://download.kde.org/stable/$VERSION/src/$PRGNAM-$VERSION.tar.xz
fi

md5sum -c $PRGNAM-$VERSION.tar.xz.md5

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.xz || exit 1
cd $PRGNAM-$VERSION || exit 1
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

# Increase the timeout to accomodate slow-to-initialize video chipset drivers:
zcat $CWD/patches/kde-workspace.kdm.server.timeout.diff.gz | patch -p1 --verbose || { touch ${SLACK_KDE_BUILD_DIR}/${PKGNAME}.failed ; continue ; }

# Always show 'remaining time' in the popup of the battery plasmoid:
zcat $CWD/patches/kde-workspace.batteryapplet.diff.gz | patch -p1 --verbose || { touch ${SLACK_KDE_BUILD_DIR}/${PKGNAME}.failed ; continue ; }

# KDE options
export KDE_OPT_ARGS=" -DKDE4_BUILD_TESTS=OFF -DSITE=\"microlinux.fr\" "

# Avoid a version number in .la files:
if [ -d /usr/lib${LIBDIRSUFFIX}/qt ]; then
  QTDIR=/usr/lib${LIBDIRSUFFIX}/qt
fi

mkdir build
cd build
  cmake \
    $KDE_OPT_ARGS \
    -DKDE_PLATFORM_FEATURE_DISABLE_DEPRECATED=TRUE \
    -DCMAKE_C_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_C_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS:STRING="$SLKCFLAGS" \
    -DCMAKE_CXX_FLAGS_RELEASE:STRING="$SLKCFLAGS" \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DMAN_INSTALL_DIR=/usr/man \
    -DSYSCONF_INSTALL_DIR=/etc/kde \
    -DLIB_SUFFIX=${LIBDIRSUFFIX} \
    ..

make $NUMJOBS || make || exit 1
make install DESTDIR=$PKG || exit 1

cd -

# We don't need the activities launcher in the panel
mv $PKG/usr/share/apps/plasma-desktop/updates/addShowActivitiesManagerPlasmoid.js \
  $PKG/usr/share/apps/plasma-desktop/updates/addShowActivitiesManagerPlasmoid.js.deactivated

# Our own custom profile
cat $CWD/00-defaultLayout.js > \
  $PKG/usr/share/apps/plasma-desktop/init/00-defaultLayout.js
cat $CWD/layout.js > \
  $PKG/usr/share/apps/plasma/layout-templates/org.kde.plasma-desktop.defaultPanel/contents/layout.js

# Use ck-launch-session in runlevel 3,
# to start and attach a ConsoleKit session to the X session:
mkdir -p $PKG/etc/X11/xinit
cat $CWD/xinit/xinitrc.kde > $PKG/etc/X11/xinit/xinitrc.kde
chmod 0755 $PKG/etc/X11/xinit/xinitrc.kde

# Setup config files for KDM:
$PKG/usr/bin/genkdmconf --no-old --no-old-scripts --no-backup --in $PKG/usr/share/config/kdm

# Add Slackware's standard xsessions path to kdmrc and remove the redundant
# xsession files for XFCE (those are installed by the xcfe package):
if ! grep -q "SessionsDirs=/usr/share/xsessions" $PKG/usr/share/config/kdm/kdmrc ; then
  sed -i -e "/SessionsDirs=/s#SessionsDirs=\(.*\)\$#SessionsDirs=/usr/share/xsessions,\1#" $PKG/usr/share/config/kdm/kdmrc
fi
rm $PKG/usr/share/apps/kdm/sessions/xfce*.desktop

# Not allowing root to login at the console is just plain silly.  If they 
# have physical access to the machine, what's the point of trying to stop 
# this?  Even the kdmrc file says this is supposed to be the default.
sed -i 's/AllowRootLogin=false/AllowRootLogin=true/' \
  $PKG/usr/share/config/kdm/kdmrc 
# We are also not ready to create a separate 'kdm' non-root user:
sed -i 's/GreeterUID=kdm/#&/' \
  $PKG/usr/share/config/kdm/kdmrc 

# Add a .new suffix so we don't mangle an existing file:
mv $PKG/usr/share/config/kdm/kdmrc $PKG/usr/share/config/kdm/kdmrc.new

cp -a $PKG/usr/share/config/kdm/Xsession $PKG/usr/share/config/kdm/Xsession.orig
cat $CWD/config/Xsession | sed -e "s#/lib#/lib${LIBDIRSUFFIX}#" \
  > $PKG/usr/share/config/kdm/Xsession

# Add a .new suffix so we don't mangle an existing file:
mv $PKG/usr/share/config/kdm/backgroundrc $PKG/usr/share/config/kdm/backgroundrc.new

# Move the KDM files someplace FHS compliant:
mkdir -p $PKG/etc/kde
mv $PKG/usr/share/config/kdm $PKG/etc/kde
( cd $PKG/usr/share/config ; ln -sf ../../../etc/kde/kdm . )

# Move the polkit dbus configuration files to the proper place:
mv $PKG/etc/kde/dbus-1 $PKG/etc/

# This is fubar:
rm -f $PKG/usr/share/icons/hicolor/index.theme

find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a COPYING* README* $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}

# Cleanup
cd $TMP
rm -rf $PRGNAM-$VERSION $PKG
